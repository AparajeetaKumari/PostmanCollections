{
	"info": {
		"_postman_id": "857595eb-4f1d-4ef9-b3a1-6cb9cd61c27f",
		"name": "GoRest APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "301708"
	},
	"item": [
		{
			"name": "GetNumberOfUsers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    ",
							"});",
							"",
							"pm.test(\"Verify the count of users is equal to 10\", function(){",
							"    var count=pm.response.json().length;",
							"    pm.expect(count).to.eql(count);",
							"",
							"});",
							"",
							"pm.test(\"Verify the count of users should be above 0\", function(){",
							"    var count=pm.response.json().length;",
							"    pm.expect(count).to.be.eql(count);",
							"",
							"",
							"});",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseURL}}public/v2/users",
					"host": [
						"{{BaseURL}}public"
					],
					"path": [
						"v2",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"Verify user id in response should not be null\", function(){",
							"    var userId = pm.response.json().id;",
							"    pm.environment.set(\"userid\",userId);",
							"    pm.expect(pm.response.json().id).to.not.be.null;",
							"",
							"});",
							"",
							"pm.test(\"Verify user id in response should be integer\", function(){",
							"    pm.expect(pm.response.json().id).to.be.a('number');",
							"",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.test(\"Generate dynamic emailid\", function(){",
							"var uniqueId = new Date().getTime() + Math.floor(Math.random() * 1000);",
							"  var uniqueEmail = \"aparajeeta\" + uniqueId + \"@gmail.com\";",
							"  pm.environment.set(\"uniqueEmail\", uniqueEmail);",
							"  console.log(uniqueEmail)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{AuthToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Mukesh\",\n    \"gender\": \"male\",\n    \"email\": \"{{uniqueEmail}}\",\n    \"status\": \"active\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}public/v2/users",
					"host": [
						"{{BaseURL}}public"
					],
					"path": [
						"v2",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateNewUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Verify response contains\", function () {",
							"   pm.expect(pm.response.json().name).to.include(\"Mukesh\");",
							"",
							"",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{AuthToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Mukesh Otwani Postman\",\n    \"gender\": \"male\",\n    \"email\": \"{{uniqueEmail}}\",\n    \"status\": \"active\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}public/v2/users/{{userid}}",
					"host": [
						"{{BaseURL}}public"
					],
					"path": [
						"v2",
						"users",
						"{{userid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"pm.test(\"Body is correct\", function () {",
							"    pm.response.to.have.status(\"No Content\");",
							"     ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{AuthToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{BaseURL}}public/v2/users/{{userid}}",
					"host": [
						"{{BaseURL}}public"
					],
					"path": [
						"v2",
						"users",
						"{{userid}}"
					]
				}
			},
			"response": []
		}
	]
}